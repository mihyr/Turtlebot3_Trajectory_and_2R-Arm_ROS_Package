#!/usr/bin/env python

""" This Node Publishes coordinates for 2 link arm to joint_states

Publisher:
    xyz 

"""
import rospy
from math import sin, cos, sqrt, pi, acos, asin, atan2
from sensor_msgs.msg import JointState
from homework2.armmath import xy_coordinates, joint_angles

#Initialize theta with 0
theta1 = 0
theta2 = 0
#Define frequency rate
freq = rospy.get_param("/F")
#Import Constants from rosparam
total_time = rospy.get_param("/T")
L1 = rospy.get_param("/L1")
L2 = rospy.get_param("/L2")

def main():
    #initialize node
    rospy.init_node('arm_traj')
    #logerr msg to check if node is running
    rospy.logerr("This is just a check for arm_traj node, ignore me")
    #define ros frequency
    hz = rospy.Rate(freq)
    #initialize time
    time = 0

    #main loop
    while not rospy.is_shutdown():
        
        #calculate x and y coordinate of end effector
        x_coor, y_coor = xy_coordinates(time, L1, L2, total_time)
        #use calculated x and y  to find theta1 and theta2 of arm links
        theta1, theta2 = joint_angles(x_coor, y_coor,L1,L2)
        #log theta1, theta2, time, x_coor, and y_coor to terminal
        rospy.loginfo(f"info message: Time {time}, Theta1:{theta1}, Theta2:{theta2}, x:{x_coor}, y:{y_coor}")
        
        #Init joint_state_publisher        
        joint_state_publisher = rospy.Publisher("joint_states", JointState, queue_size=10)
        joint_state = JointState()
        #joint_state_publisher requires header stamp: current ros time
        joint_state.header.stamp = rospy.Time.now()
        #add name of links in order from parent to child
        joint_state.name = ['base_jt', 'base_to_child_jt']
        #publish theta1 and theta2 to joint_states
        joint_state.position = [theta1, theta2]
        joint_state_publisher.publish(joint_state)

        #update time and sleep
        time += 1/freq
        hz.sleep()
            
if __name__ == "__main__":
    try:
        main()
    except rospy.ROSInterruptException:
        pass